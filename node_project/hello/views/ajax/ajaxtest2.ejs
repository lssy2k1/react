<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>

</head>
<body>
    <form action="">
        x : <input type = "text" name = "x" id = "x"><br/>
        y : <input type = "text" name = "y" id = "y"><br/>

        result : <input type = "text" name = "result" id = "result"><br/>

        <button type = "button" id = "btnAdd">더하기</button>
    </form>
</body>
</html>
<script>
    $(document).ready(() => {
        $("#btnAdd").click(() => {
            //비동기모드 : 반환값 x
            $.ajax({
                url : "/ajax/add",
                data : {"x" : $("#x").val(), "y" : $("#y").val()},
                dataType : "json" //결과를 JSON으로 가져오겠다.
            })
            .done((res,status, error) => {
                $("#result").val(res.result);
                console.log(res);
            })
            .fail((res, status, error) => {
                console.log(status);
            })
        })
    })
</script>

<!-- AJAX에서 설정한 url, data, dataType은 클라이언트에서 서버로 HTTP 요청을 보낼 때 사용하는 정보를 설정합니다.
url: 요청을 보낼 서버의 URL 경로입니다. 이 URL 경로는 미들웨어 함수를 호출하는 것이 아니라, 
    서버의 특정 경로에 있는 리소스를 요청하는 것입니다.
data: 서버로 보낼 데이터를 설정합니다. 보통 HTTP 요청에서 GET 메서드에서는 URL 쿼리 문자열에 데이터를 담아 보내고, 
    POST 메서드에서는 요청 본문에 데이터를 담아 보냅니다.
dataType: 서버로부터 받을 데이터의 타입을 설정합니다. 이 값은 서버가 보낸 데이터를 클라이언트에서 어떻게 처리할지 결정합니다. 
    dataType은 서버에서 보낸 데이터를 자바스크립트 객체로 변환하는 방법을 설정하는데, 
    예를 들어 json으로 설정하면 서버에서 보낸 JSON 문자열을 자바스크립트 객체로 변환합니다.
미들웨어 함수에서 데이터를 전송하거나, 결과를 반환하는 경우에는 request 객체와 response 객체를 이용합니다. 
AJAX 요청과 미들웨어 함수의 구조는 전혀 다릅니다. -->